%do some cleaningclear all;close all;%add packagesaddpath('./signal');addpath('./channel');addpath('./estimation');%initializationParameters;NDrops = SIMULATION.NDrops;NSubframes = SIMULATION.NSubframes;wichOFDMSymbol = SIMULATION.wichOFDMSymbol;whichAPUsed =  SIMULATION.whichAPUsed;OFDMId = SIMULATION.wichOFDMSymbol;%constant calculationsSCLength = SYSTEM.totalRB_PRS * 2;NSamples = NSubframes * length( wichOFDMSymbol) * length( whichAPUsed);if SIMULATION.withCP   sOFDMLength = SYSTEM.FFTsize + SYSTEM.CP1;else  sOFDMLength = SYSTEM.FFTsize;end%resource allocationsOFDMAll = cell(1, NDrops);rOFDMAll = cell(1, NDrops);sSCAll = cell(1, NDrops);rSCAll = cell(1, NDrops);SCAll = cell(1, NDrops);%transmitter and channelfor drop = 1: NDrops    %a drop  cnt= 1;  %resource allocation  sOFDMAll{drop} = zeros(sOFDMLength, NSubframes);  rOFDMAll{drop} = zeros(sOFDMLength, NSubframes);  sSCAll{drop} = zeros(sSCLength, NSubframes);  rSCAll{drop} = zeros(sSCLength, NSubframes);  SCAll{drop} = zeros(sSCLength, NSubframes);  for id = 0 : NSubframes-1   %a subframe    st = GenerateSubframe(SYSTEM, id);    rt = AWGN(SYSTEM, CHANNEL, st);    for ofdm = wichOFDMSymbol   %a symbol      for ap = whichAPUsed    %an ap        [ sSCAll{drop}(:, cnt), SCAll{drop}(:, cnt)] = GetSCSymbol( SYSTEM, st, id, ofdm, ap );        rSCAll{drop}(:, cnt) = GetSCSymbol( SYSTEM, rt, id, ofdm, ap );        % % A validation line, supposed to be 0 if without noise        %max( abs( rSCAll{drop}(:, cnt) - sSCAll{drop}(:, cnt) .* exp(-j * 2 * pi / 1024 * 10 * (SCAll{drop}(:, cnt)-1)) ) )        sOFDMAll{drop}(:, cnt) = GetOFDMSymbol( SYSTEM, st, ofdm, ap, false );        rOFDMAll{drop}(:, cnt) = GetOFDMSymbol( SYSTEM, rt, ofdm, ap, false );        cnt = cnt + 1;      end % end ap    end  %end ofdm  end   %end subframesend %end drop%receiverfor drop = 1: NDrops    %a drop  ML_AWGN_MSamples_LastMean( SYSTEM, ESTIMATION, sSCAll{drop}, rSCAll{drop}, SCAll{drop})  TC_AWGN_MSamples_LastMean( SYSTEM, ESTIMATION, sOFDMAll{drop}, rOFDMAll{drop})  MdlMusic_MSamples( SYSTEM, ESTIMATION, sSCAll{drop}, rSCAll{drop}, SCAll{drop})end %end drop